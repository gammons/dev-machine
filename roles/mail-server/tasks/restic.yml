---
- name: Install restic
  become: true
  apt: pkg={{ item }} update_cache=yes state=installed
  with_items:
    - restic

- name: initialize restic rep
  become: true
  become_user: grant
  shell: restic -r s3:s3.amazonaws.com/gammons-maildir-backup init
  args:
    chdir: /home/grant
  environment:
    AWS_ACCESS_KEY_ID: "{{ lookup('env','RESTIC_AWS_ACCESS_KEY_ID') }}"
    AWS_SECRET_ACCESS_KEY: "{{ lookup('env','RESTIC_AWS_SECRET_ACCESS_KEY') }}"
    RESTIC_PASSWORD: "{{ lookup('env','RESTIC_PASSWORD') }}"


- name: add SHELL env var to crontab
  become: true
  become_user: grant
  cron:
    name: SHELL
    env: yes
    value: /bin/bash

- name: add AWS_ACCESS_KEY_ID env var to crontab
  become: true
  become_user: grant
  cron:
    name: AWS_ACCESS_KEY_ID
    env: yes
    value: "{{ lookup('env','RESTIC_AWS_ACCESS_KEY_ID') }}"

- name: add AWS_SECRET_ACCESS_KEY env var to crontab
  become: true
  become_user: grant
  cron:
    name: AWS_SECRET_ACCESS_KEY
    env: yes
    value: "{{ lookup('env','RESTIC_AWS_SECRET_ACCESS_KEY') }}"

- name: add RESTIC_PASSWORD env var to crontab
  become: true
  become_user: grant
  cron:
    name: RESTIC_PASSWORD
    env: yes
    value: "{{ lookup('env','RESTIC_PASSWORD') }}"

- name: set up cron task to back up every 30 mins
  become: true
  become_user: grant
  cron:
    minute: "0,30"
    job: "restic -r s3:s3.amazonaws.com/gammons-maildir-backup backup Maildir/ > /tmp/restic.txt 2>&1"
